# Multi-Touch Attribution API - Docker Compose Configuration

version: '3.8'

services:
  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: attribution-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - attribution-network

  # Attribution API
  attribution-api:
    build: .
    container_name: attribution-api
    ports:
      - "8000:8000"
    environment:
      # Security
      - ENABLE_API_KEY_AUTH=true
      - DEFAULT_RATE_LIMIT=1000
      - API_KEY_TTL_SECONDS=2592000
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      
      # Logging
      - LOG_LEVEL=INFO
      - ENABLE_SECURITY_LOGGING=true
      
      # File Processing
      - MAX_FILE_SIZE_MB=100
      - MAX_CONCURRENT_REQUESTS=10
      - MAX_MEMORY_USAGE_GB=2.0
      
      # Processing Timeouts
      - PROCESSING_TIMEOUT_SECONDS=300
      - SMALL_FILE_TIMEOUT_SECONDS=5
      
      # Attribution Model Defaults
      - DEFAULT_TIME_DECAY_HALF_LIFE_DAYS=7.0
      - CONFIDENCE_THRESHOLD=0.7
      
      # Data Quality Thresholds
      - MINIMUM_DATA_COMPLETENESS=0.8
      - MINIMUM_DATA_CONSISTENCY=0.7
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - attribution-network
    restart: unless-stopped

  # Nginx Load Balancer (optional)
  nginx:
    image: nginx:alpine
    container_name: attribution-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - attribution-api
    networks:
      - attribution-network
    restart: unless-stopped

volumes:
  redis_data:

networks:
  attribution-network:
    driver: bridge
